#! /usr/bin/env python

#
# make_bulb_gamma_shocks:
#     Make the input files for a stimulus paradigm that represents
#     a series of weak shocks from the bulb.  It roughly parallels
#     what I think is happening during a weak shock.
#

import sys, string, re

myname = re.sub(".*/", "", sys.argv[0])

usagestr = \
"usage: %s frequency level paradigm [second-shock-delay]"

if len(sys.argv) < 4:
    print usagestr % myname
    raise SystemExit

outfilename = "bulb_sync_spike_events_shock"
outfile = open(outfilename, "w")
outfile.write("""# format: event [event ...] [pProb]
# (nsequences events per line; nsequences is usually 1)
# Probability of responding to an event is shown by the last
# number which must have a trailing `p' e.g. p0.5
""")

frequency       = string.atof(sys.argv[1])
nshocks         = 6
period          = 1.0 / frequency
level           = string.atof(sys.argv[2])
paradigm_string = sys.argv[3]

if paradigm_string == "tapered":
    paradigm = [1.0, 0.85, 0.7, 0.55, 0.4, 0.25]
elif paradigm_string == "flat":
    paradigm = [1.0] * 6
else:
    print "Invalid paradigm: %s" % paradigm_string
    raise SystemExit

if len(sys.argv) > 4:
    second_shock_delay = string.atof(sys.argv[4])
else:
    second_shock_delay = 0.0


time = 0.0

i = 0
for p in paradigm:
    prob = p * level
    
    if prob < 0.0 or prob > 1.0:
        print "Invalid probability: %g" % prob
        raise SystemExit
    
    outfile.write("%.3f\tp%.4f\n" % (time, prob))

    if i == 0:
        time += period + second_shock_delay
    else:
        time += period
        
    i = i + 1

outfile.close()

