

// **************************************************
// File generated by: neuroConstruct v1.7.0 
// **************************************************

// This file holds the implementation in GENESIS of the Cell Mechanism:
// Olfactory_Ca_ChannelML (Type: Channel mechanism, Model: ChannelML based process)

// with parameters: 
// /channelml/@units = SI Units 
// /channelml/notes = Slow Ca current based on voltage clamp data from:      Constanti, Galvan, Franz, and Sim Pfulgers Arch (1985)      404:259-265 Assumptions about the e ... 
// /channelml/channel_type/@name = Olfactory_Ca_ChannelML 
// /channelml/channel_type/status/@value = stable 
// /channelml/channel_type/status/comment = Verified equivalence of NEURON and GENESIS mapping to orig GENESIS impl from www.tnb.ua.ac.be. 
// /channelml/channel_type/status/contributor/name = Simon O'Connor 
// /channelml/channel_type/notes = A-type K channel, with rate equations expressed in tau and inf form 
// /channelml/channel_type/authorList/modelTranslator/name = Simon OConnor 
// /channelml/channel_type/authorList/modelTranslator/institution = Cardiff University 
// /channelml/channel_type/authorList/modelTranslator/email = simon.oconnor - at - btinternet.com 
// /channelml/channel_type/publication/fullTitle = M. C. Vanier and J. M. Bower (1999) A Comparative Survey of Automated Parameter-Searching Methods for Compartmental Neural Models. Journal of Computat ... 
// /channelml/channel_type/publication/pubmedRef = http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;list_uids=10515252&amp;dopt=Abstract 
// /channelml/channel_type/neuronDBref/modelName = Calcium channels 
// /channelml/channel_type/neuronDBref/uri = http://senselab.med.yale.edu/senselab/NeuronDB/channelGene2.htm#table1 
// /channelml/channel_type/current_voltage_relation/@cond_law = ohmic 
// /channelml/channel_type/current_voltage_relation/@ion = ca 
// /channelml/channel_type/current_voltage_relation/@default_gmax = 10.0 
// /channelml/channel_type/current_voltage_relation/@default_erev = 0.113 
// /channelml/channel_type/current_voltage_relation/@charge = 2 
// /channelml/channel_type/current_voltage_relation/@fixed_erev = yes 
// /channelml/channel_type/current_voltage_relation/gate[1]/@name = m 
// /channelml/channel_type/current_voltage_relation/gate[1]/@instances = 1 
// /channelml/channel_type/current_voltage_relation/gate[1]/closed_state/@id = m0 
// /channelml/channel_type/current_voltage_relation/gate[1]/open_state/@id = m 
// /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@name = tau 
// /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@from = m0 
// /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@to = m 
// /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@expr_form = generic 
// /channelml/channel_type/current_voltage_relation/gate[1]/time_course/@expr = 0.001/ ((exp (-1.0 * (v + 0.0032)/ (0.0067))) + (exp ((v + 0.0168)/ 0.0182))) + 0.003 
// /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@name = inf 
// /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@from = m0 
// /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@to = m 
// /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@expr_form = generic 
// /channelml/channel_type/current_voltage_relation/gate[1]/steady_state/@expr = 1.0 / (1.0 + (exp (-1.0 * (v + 0.032)/ (0.010)))) 
// /channelml/channel_type/current_voltage_relation/gate[2]/@name = h 
// /channelml/channel_type/current_voltage_relation/gate[2]/@instances = 1 
// /channelml/channel_type/current_voltage_relation/gate[2]/closed_state/@id = h0 
// /channelml/channel_type/current_voltage_relation/gate[2]/open_state/@id = h 
// /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@name = tau 
// /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@from = h0 
// /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@to = h 
// /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@expr_form = generic 
// /channelml/channel_type/current_voltage_relation/gate[2]/time_course/@expr = (0.35/ ((exp ((v + 0.035)/ 0.012)) + (exp ((-1.0 * 0.025 - v)/ 0.012)))) + 0.01 
// /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@name = inf 
// /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@from = h0 
// /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@to = h 
// /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@expr_form = generic 
// /channelml/channel_type/current_voltage_relation/gate[2]/steady_state/@expr = 1.0 / (1.0 + (exp ((v + 0.040)/ (0.035)))) 
// /channelml/channel_type/impl_prefs/table_settings/@max_v = 0.1 
// /channelml/channel_type/impl_prefs/table_settings/@min_v = -0.1 
// /channelml/channel_type/impl_prefs/table_settings/@table_divisions = 3000 

// File from which this was generated: /home/Simon/PiriformCortexPyramidalNeuron/neuroConstruct/cellMechanisms/Olfactory_Ca_ChannelML/CaHVA_Chan.xml

// XSL file with mapping to simulator: /home/Simon/PiriformCortexPyramidalNeuron/neuroConstruct/cellMechanisms/Olfactory_Ca_ChannelML/ChannelML_v1.8.1_GENESIStab.xsl



// This is a GENESIS script file generated from a ChannelML v1.8.1 file
// The ChannelML file is mapped onto a tabchannel object


// Units of ChannelML file: SI Units, units of GENESIS file generated: SI Units

/*
    Slow Ca current based on voltage clamp data from:
     Constanti, Galvan, Franz, and Sim Pfulgers Arch (1985)
     404:259-265
Assumptions about the existence of distinct slow current from:
     Halliwell and Scholfield Neurosci Letters (1984)
     50:13-18
Other papers about Ca currents in piriform pyramidal cells:
     Galvan, Constanti, and Franz Pfulgers Arch (1985)
     404:252-258
*/

function make_Olfactory_Ca_ChannelML

        /*
            A-type K channel, with rate equations expressed in tau and inf form

            
Reference: M. C. Vanier and J. M. Bower (1999) A Comparative Survey of Automated Parameter-Searching Methods for Compartmental Neural Models. Journal of Computational Neuroscience 7, 149-171.
            Pubmed: http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&db=PubMed&list_uids=10515252&dopt=Abstract

        */
        

        str chanpath = "/library/Olfactory_Ca_ChannelML"

        if ({exists {chanpath}})
            return
        end
        
        create tabchannel {chanpath}
            

        setfield {chanpath} \ 
            Ek              0.113 \
            Ik              0  \
            Xpower          1 \
            Ypower          1
        
        setfield {chanpath} \
            Gbar 10.0 \
            Gk              0 

        
        // No Q10 temperature adjustment found
        float temp_adj_m = 1
        float temp_adj_h = 1
    

        float tab_divs = 3000
        float v_min = -0.1

        float v_max = 0.1

        float v, dv, i
            
        // Creating table for gate m, using name X for it here

        float dv = ({v_max} - {v_min})/{tab_divs}
            
        call {chanpath} TABCREATE X {tab_divs} {v_min} {v_max}
                
        v = {v_min}

            

        for (i = 0; i <= ({tab_divs}); i = i + 1)
            
            // Looking at rate: tau
                

            float tau
                
                        
            // Found a generic form of rate equation for tau, using expression: 0.001/ ((exp (-1.0 * (v + 0.0032)/ (0.0067))) + (exp ((v + 0.0168)/ 0.0182))) + 0.003
            // Will translate this for GENESIS compatibility...
                    tau = 0.001/ {{exp {-1.0 * {v + 0.0032}/ {0.0067}}} + {exp {{v + 0.0168}/ 0.0182}}} + 0.003
            
            // Looking at rate: inf
                

            float inf
                
                        
            // Found a generic form of rate equation for inf, using expression: 1.0 / (1.0 + (exp (-1.0 * (v + 0.032)/ (0.010))))
            // Will translate this for GENESIS compatibility...
                    inf = 1.0 / {1.0 + {exp {-1.0 * {v + 0.032}/ {0.010}}}}
            

            // Evaluating the tau and inf expressions

                    
            tau = tau/temp_adj_m
    

            
            // Working out the "real" alpha and beta expressions from the tau and inf
            
            float alpha
            float beta
            alpha = inf / tau   
            beta = (1- inf)/tau
            
            
            setfield {chanpath} X_A->table[{i}] {alpha}
            setfield {chanpath} X_B->table[{i}] {alpha + beta}

                
            v = v + dv

        end // end of for (i = 0; i <= ({tab_divs}); i = i + 1)
            
        setfield {chanpath} X_A->calc_mode 1 X_B->calc_mode 1
                    
        // Creating table for gate h, using name Y for it here

        float dv = ({v_max} - {v_min})/{tab_divs}
            
        call {chanpath} TABCREATE Y {tab_divs} {v_min} {v_max}
                
        v = {v_min}

            

        for (i = 0; i <= ({tab_divs}); i = i + 1)
            
            // Looking at rate: tau
                

            float tau
                
                        
            // Found a generic form of rate equation for tau, using expression: (0.35/ ((exp ((v + 0.035)/ 0.012)) + (exp ((-1.0 * 0.025 - v)/ 0.012)))) + 0.01
            // Will translate this for GENESIS compatibility...
                    tau = {0.35/ {{exp {{v + 0.035}/ 0.012}} + {exp {{-1.0 * 0.025 - v}/ 0.012}}}} + 0.01
            
            // Looking at rate: inf
                

            float inf
                
                        
            // Found a generic form of rate equation for inf, using expression: 1.0 / (1.0 + (exp ((v + 0.040)/ (0.035))))
            // Will translate this for GENESIS compatibility...
                    inf = 1.0 / {1.0 + {exp {{v + 0.040}/ {0.035}}}}
            

            // Evaluating the tau and inf expressions

                    
            tau = tau/temp_adj_h
    

            
            // Working out the "real" alpha and beta expressions from the tau and inf
            
            float alpha
            float beta
            alpha = inf / tau   
            beta = (1- inf)/tau
            
            
            setfield {chanpath} Y_A->table[{i}] {alpha}
            setfield {chanpath} Y_B->table[{i}] {alpha + beta}

                
            v = v + dv

        end // end of for (i = 0; i <= ({tab_divs}); i = i + 1)
            
        setfield {chanpath} Y_A->calc_mode 1 Y_B->calc_mode 1
                    


end

